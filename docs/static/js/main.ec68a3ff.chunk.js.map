{"version":3,"sources":["../node_modules/@stacks/connect-ui/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/Card.jsx","logo.svg","auth.js","storage.js","components/CardList.jsx","styled/ContentWrapper.jsx","styled/Header.jsx","components/Profile.jsx","styled/Logo.jsx","components/SignIn.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","CodeContainer","styled","div","LabelContainer","Progress","ProgressBar","Card","Component","constructor","props","super","this","state","token","timeRemaining","iconBgColor","copy","toaster","success","updateToken","secretKey","data","authenticator","generate","setState","timer","setTimeout","bind","render","user","service","Pane","elevation","hoverElevation","backgroundColor","padding","Heading","Popover","position","Position","BOTTOM_LEFT","content","close","Menu","Group","Item","icon","ListDetailViewIcon","onSelect","onDetail","EditIcon","onEdit","Divider","TrashIcon","intent","onRemove","MoreIcon","color","is","size","Tooltip","RIGHT","ClipboardIcon","marginLeft","onClick","copyToClipboard","Paragraph","marginBottom","Strong","style","width","Math","round","componentDidMount","componentWillUnmount","clearTimeout","defaultProps","appConfig","AppConfig","userSession","UserSession","getUserData","loadUserData","storage","Storage","CARDS_FILENAME","defaultCards","saveCards","async","putFile","JSON","stringify","cards","Wrapper","Container","SpinnerWrapper","GridContainer","mediaBreakpointOnlySm","mediaBreakpointOnlyMd","mediaBreakpointOnlyLg","mediaBreakpointOnlyXl","DetailsGrid","AddCard","SortableItem","SortableElement","SortableList","SortableContainer","items","onAdd","value","index","Button","iconBefore","PlusIcon","marginRight","CardList","isLoading","dialog","services","placeholder","isShown","edit","detail","card","handleInputChange","handleDialogOpenComplete","handleDialogCloseComplete","handleCardDetail","handleCardEdit","handleCardRemove","handleSortEnd","saveCard","event","target","name","find","otpauth","keyuri","findIndex","splice","cardsJSON","getFile","parse","error","fetchCards","uuid","trim","createdAt","Date","now","push","cardIndex","floor","random","length","oldIndex","newIndex","arrayMoveImmutable","filter","filteredCards","toLowerCase","includes","Spinner","onSortEnd","axis","pressDelay","Dialog","title","onOpenComplete","onCloseComplete","isConfirmLoading","onConfirm","confirmLabel","isConfirmDisabled","TextInputField","label","required","defaultValue","onChange","SideSheet","containerProps","display","flex","flexDirection","zIndex","flexShrink","overflowY","background","unix","format","flexGrow","alignItems","justifyContent","level","fetchData","ContentWrapper","Header","mediaBreakpointUpLg","avatarFallbackImage","Footer","footer","Profile","person","avatarUrl","username","year","getFullYear","handleSignOut","isSignInPending","SearchInput","height","BOTTOM_RIGHT","minWidth","border","marginTop","Avatar","src","Text","LogOutIcon","Link","href","componentWillMount","Person","profile","SignInCardLogo","className","alt","logo","SignIn","clearfix","float","margin","appearance","showConnect","appDetails","window","location","origin","redirectTo","onFinish","reload","App","userData","preventDefault","signUserOut","isUserSignedIn","handlePendingSignIn","history","replaceState","document","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec68a3ff.chunk.js","sourcesContent":["var map = {\n\t\"./connect-modal.entry.js\": [\n\t\t605,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 592;\nmodule.exports = webpackAsyncContext;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {\n    Heading,\n    Pane,\n    Paragraph,\n    Menu,\n    Strong,\n    Tooltip,\n    Popover,\n    Position,\n    toaster, MoreIcon, ClipboardIcon, ListDetailViewIcon, EditIcon, TrashIcon\n} from 'evergreen-ui';\nimport copy from 'clipboard-copy';\nimport { authenticator } from 'otplib';\nimport PropTypes from 'prop-types';\n\nconst CodeContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 5px;\n`;\n\nconst LabelContainer = styled.div`\n    justify-content: space-between;\n    margin-bottom: 10px;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    h2 {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n`;\n\nconst Progress = styled.div`\n    display: flex;\n    height: 3px;\n    overflow: hidden;\n    font-size: 0.60938rem;\n    background-color: #EBF0FF;\n`;\n\nconst ProgressBar = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    color: #fff;\n    text-align: center;\n    white-space: nowrap;\n    transition: width 0.6s ease;\n    background-color: #2952CC;\n`;\n\nclass Card extends Component {\n    static defaultProps = {\n        data: {\n            id: null,\n            user: '',\n            service: '',\n            secretKey: ''\n        },\n        onEdit: () => {},\n        onRemove: () => {},\n        onDetail: () => {}\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: null,\n            timeRemaining: null\n        };\n        this.iconBgColor = '#8f95b2'\n    }\n\n    async copyToClipboard() {\n        await copy(this.state.token);\n        toaster.success('Token copied to clipboard');\n    }\n\n    updateToken() {\n        const { secretKey } = this.props.data;\n        const token = authenticator.generate(secretKey);\n        const timeRemaining = authenticator.timeRemaining();\n\n        this.setState({\n            token,\n            timeRemaining\n        });\n        this.timer = setTimeout(this.updateToken.bind(this), 1000);\n    }\n\n    render() {\n        const { id, user, service } = this.props.data;\n        const { token, timeRemaining } = this.state;\n\n        return (\n            <Pane elevation={1} hoverElevation={2} backgroundColor=\"white\" padding={20}>\n                <LabelContainer>\n                    <Heading>{service} ({user})</Heading>\n                    <Popover\n                        position={Position.BOTTOM_LEFT}\n                        content={({ close }) =>\n                            <Menu>\n                                <Menu.Group>\n                                    <Menu.Item icon={ListDetailViewIcon} onSelect={() => {\n                                        this.props.onDetail(id);\n                                        close();\n                                    }}>View</Menu.Item>\n                                    <Menu.Item icon={EditIcon} onSelect={() => {\n                                        this.props.onEdit(id);\n                                        close();\n                                    }}>Edit</Menu.Item>\n                                </Menu.Group>\n                                <Menu.Divider />\n                                <Menu.Group>\n                                    <Menu.Item icon={TrashIcon} intent=\"danger\" onSelect={() => {\n                                        this.props.onRemove(id);\n                                        close();\n                                    }}>Remove</Menu.Item>\n                                </Menu.Group>\n                            </Menu>\n                        }\n                        >\n                        <MoreIcon color={this.iconBgColor} />\n                    </Popover>\n                </LabelContainer>\n                <CodeContainer>\n                    <Heading is=\"h1\" size={900}>{token}</Heading>\n                    <Tooltip content=\"Copy to clipboard\" position={Position.RIGHT}>\n                        <ClipboardIcon color={this.iconBgColor} marginLeft={10} onClick={ this.copyToClipboard.bind(this) } />\n                    </Tooltip>\n                </CodeContainer>\n                <Paragraph color=\"muted\" marginBottom={5}>\n                    Your token expires in <Strong>{ timeRemaining }s</Strong>\n                </Paragraph>\n                <Progress>\n                    <ProgressBar style={{ width: Math.round((timeRemaining / 30) * 100) + '%' }} />\n                </Progress>\n            </Pane>\n        );\n    }\n\n    componentDidMount() {\n        this.updateToken();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n}\n\nCard.propTypes = {\n    data: PropTypes.object.isRequired,\n    onDetail: PropTypes.func,\n    onRemove: PropTypes.func,\n    onEdit: PropTypes.func\n}\n\nexport default Card;","export default __webpack_public_path__ + \"static/media/logo.21c9f637.svg\";","import { AppConfig, UserSession, showConnect } from '@stacks/connect';\nimport { Person } from '@stacks/profile';\nimport logo from './logo.svg';\n\n// const appDomain = 'https://blockauth.js.org';\nconst appConfig = new AppConfig(['store_write', 'publish_data']/*, appDomain*/);\n\nexport const userSession = new UserSession({ appConfig });\n\nexport function authenticate() {\n    showConnect({\n        appDetails: {\n            name: 'Stacks auth',\n            icon: window.location.origin + logo\n        },\n        redirectTo: '/',\n        onFinish: () => {\n            window.location.reload();\n        },\n        userSession,\n    });\n}\n\nexport function getUserData() {\n    return userSession.loadUserData();\n}\n\nexport function getPerson() {\n    return new Person(getUserData().profile);\n}","import { Storage } from '@stacks/storage';\nimport { userSession } from './auth';\n\nconst storage = new Storage({ userSession });\nconst CARDS_FILENAME = 'cards.json';\n\n/**\n * @typedef {Object} Card\n * @property {string} id\n * @property {string} user\n * @property {string} service\n * @property {string} secretKey\n * @property {number} createdAt\n */\n\n// @type {Card[]}\nexport const defaultCards = [];\n\n/**\n * Save tasks to Gaia\n * @param {Card[]} cards\n */\nexport const saveCards = async (cards) => {\n    await storage.putFile(CARDS_FILENAME, JSON.stringify(cards));\n};\n\n/**\n * Fetch cards for a current user.\n *\n * If no cards are found, then the default cards are returned.\n * to fetch the current user's cards.\n * @returns {{ cards: Card[] }}\n */\nexport const fetchCards = async () => {\n    try {\n        /** @type {string} raw JSON stored in Gaia */\n        const cardsJSON = await storage.getFile(CARDS_FILENAME);\n\n        return cardsJSON ? JSON.parse(cardsJSON) : defaultCards;\n    } catch (error) {\n        return defaultCards;\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {\n    Button,\n    Dialog,\n    Heading,\n    Pane,\n    Paragraph, PlusIcon,\n    SideSheet,\n    Spinner,\n    Strong,\n    TextInputField,\n    toaster\n} from 'evergreen-ui';\nimport { mediaBreakpointOnlySm, mediaBreakpointOnlyMd, mediaBreakpointOnlyLg, mediaBreakpointOnlyXl } from 'styled-bootstrap-responsive-breakpoints';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { authenticator } from 'otplib';\nimport QRCode from 'qrcode.react';\nimport Moment from 'react-moment';\nimport { v4 as uuid } from 'uuid';\nimport Card from './Card';\nimport { fetchCards, saveCards } from '../storage';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-grow: 1;\n`;\n\nconst Container = styled(Wrapper)`\n    flex-direction: column;\n`;\n\nconst SpinnerWrapper = styled(Wrapper)`\n    align-self: center;\n    justify-content: center;\n`;\n\nconst GridContainer = styled.div`\n    display: grid;\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n    margin-bottom: 15px;\n\n    ${mediaBreakpointOnlySm`\n        grid-template-columns: repeat(2, calc(50% - 7.5px));\n    `};\n\n    ${mediaBreakpointOnlyMd`\n        grid-template-columns: repeat(3, calc(33.33% - 10px));\n    `};\n\n    ${mediaBreakpointOnlyLg`\n        grid-template-columns: repeat(4, calc(25% - 11.25px));\n    `};\n\n    ${mediaBreakpointOnlyXl`\n        grid-template-columns: repeat(5, calc(20% - 12px));\n    `};\n`;\n\nconst DetailsGrid = styled.div`\n    display: grid;\n    grid-column-gap: 15px;\n    grid-row-gap: 5px;\n    grid-template-columns: 30% calc(70% - 15px);\n    background-color: #fff;\n    padding: 15px;\n`;\n\nconst AddCard = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 3px dashed #edeff5;\n    min-height: 142px;\n`;\n\nconst SortableItem = SortableElement((props) => <Card {...props} />);\n\nconst SortableList = SortableContainer(({items, onAdd, onDetail, onEdit, onRemove}) => {\n    return (\n        <GridContainer>\n        {items.map((value, index) => (\n            <SortableItem key={`item-${index}`} index={index} data={value} onDetail={onDetail} onEdit={onEdit} onRemove={onRemove} />\n        ))}\n            <AddCard>\n                <Button iconBefore={PlusIcon} marginRight={12} onClick={onAdd}>Add secret</Button>\n            </AddCard>\n        </GridContainer>\n    );\n});\n\nexport default class CardList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cards: [],\n            isLoading: false,\n            dialog: {\n                services: ['Binance', 'Coinlist', 'Huobi', 'Bittrex', 'Kraken', 'Poloniex', 'Xapo', 'LocalBitcoins', 'Bitstamp', 'Bitfinex'],\n                placeholder: null,\n                isShown: false,\n                isLoading: false,\n                edit: null,\n                value: '',\n                service: '',\n                secretKey: ''\n            },\n            detail: {\n                isShown: false,\n                card: {}\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleDialogOpenComplete = this.handleDialogOpenComplete.bind(this);\n        this.handleDialogCloseComplete = this.handleDialogCloseComplete.bind(this);\n        this.handleCardDetail = this.handleCardDetail.bind(this);\n        this.handleCardEdit = this.handleCardEdit.bind(this);\n        this.handleCardRemove = this.handleCardRemove.bind(this);\n        this.handleSortEnd = this.handleSortEnd.bind(this);\n        this.saveCard = this.saveCard.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        this.setState({\n            dialog: {\n                ...this.state.dialog,\n                [target.name]: target.value\n            }\n        });\n    }\n\n    handleCardDetail(id) {\n        const card = this.state.cards.find(card => card.id === id);\n        this.setState({\n            detail: {\n                ...this.state.detail,\n                isShown: true,\n                card,\n                otpauth: authenticator.keyuri(card.user, card.service, card.secretKey)\n            }\n        });\n    }\n\n    handleCardEdit(id) {\n        const card = this.state.cards.find(card => card.id === id);\n        this.setState({\n            dialog: {\n                ...this.state.dialog,\n                isShown: true,\n                edit: id,\n                user: card.user,\n                service: card.service,\n                secretKey: card.secretKey\n            }\n        });\n    }\n\n    async handleCardRemove(id) {\n        let { cards } = this.state;\n        const index = cards.findIndex(card => card.id === id);\n\n        if (index > -1) {\n            cards.splice(index, 1);\n            this.setState({ cards });\n            await saveCards(cards);\n            toaster.success('Card deleted successfully');\n        }\n    }\n\n    async fetchData() {\n        this.setState({ isLoading: true });\n        const cards = await fetchCards();\n        this.setState({ cards, isLoading: false });\n    }\n\n    async saveCard() {\n        const { dialog } = this.state;\n        let cards = this.state.cards;\n        this.setState({ dialog: { ...dialog, isLoading: true }});\n\n        let card = {\n            id: dialog.edit || uuid(),\n            user: dialog.user.trim(),\n            service: dialog.service.trim(),\n            secretKey: dialog.secretKey.trim(),\n            createdAt: Date.now()\n        };\n\n        if (dialog.edit) {\n            const index = cards.findIndex(card => card.id === dialog.edit);\n\n            if (index > -1) {\n                cards[index] = card;\n            }\n        } else {\n            cards.push(card);\n        }\n\n        await saveCards(cards);\n        this.setState({\n            cardIndex: card.id,\n            cards,\n            dialog: {\n                ...dialog,\n                isShown: false,\n                isLoading: false,\n                edit: null,\n                user: '',\n                service: '',\n                secretKey: ''\n            }\n        });\n        toaster.success('Card successfully added');\n    }\n\n    handleDialogOpenComplete() {\n        const { services } = this.state.dialog;\n        const placeholder = services[Math.floor(Math.random() * services.length)];\n        this.setState({\n            dialog: {\n                ...this.state.dialog,\n                placeholder\n            }\n        });\n    }\n\n    handleDialogCloseComplete() {\n        let dialog = this.state.dialog;\n\n        if (dialog.edit) {\n            dialog = {\n                ...dialog,\n                edit: null,\n                user: '',\n                service: '',\n                secretKey: ''\n            }\n        }\n\n        this.setState({\n            dialog: {\n                ...dialog,\n                isShown: false,\n                isLoading: false\n            }\n        });\n    }\n\n    async handleSortEnd({oldIndex, newIndex}) {\n        let cards = arrayMoveImmutable(this.state.cards, oldIndex, newIndex);\n\n        this.setState({ cards });\n        await saveCards(cards);\n    }\n\n    render() {\n        const { dialog, cards, detail } = this.state;\n        const { filter } = this.props;\n        const filteredCards = cards.filter(card => card.user.toLowerCase().includes(filter) || card.service.toLowerCase().includes(filter));\n\n        return (\n            this.state.isLoading ? <SpinnerWrapper><Spinner /></SpinnerWrapper>\n            : <Container>\n                <Heading is=\"h1\" size={700} marginBottom={20}>Authentication cards</Heading>\n                <SortableList\n                    items={filteredCards}\n                    onAdd={() => this.setState({ dialog: { ...dialog, isShown: true }})}\n                    onDetail={this.handleCardDetail}\n                    onEdit={this.handleCardEdit}\n                    onRemove={this.handleCardRemove}\n                    onSortEnd={this.handleSortEnd}\n                    axis=\"xy\"\n                    pressDelay={200}\n                    />\n                <Dialog\n                    width={400}\n                    isShown={dialog.isShown}\n                    title={`${dialog.edit ? 'Edit' : 'Add'} secret`}\n                    onOpenComplete={this.handleDialogOpenComplete}\n                    onCloseComplete={this.handleDialogCloseComplete}\n                    isConfirmLoading={dialog.isLoading}\n                    onConfirm={this.saveCard.bind(this)}\n                    confirmLabel={dialog.isLoading ? 'Loading...' : 'Save'}\n                    isConfirmDisabled={!dialog.user || !dialog.service || !dialog.secretKey}\n                >\n                    <TextInputField\n                        name=\"user\"\n                        label=\"User name\"\n                        required\n                        placeholder={`for example, Elon Must or user@domain.com`}\n                        defaultValue={dialog.user}\n                        onChange={this.handleInputChange}\n                        />\n                    <TextInputField\n                        name=\"service\"\n                        label=\"Service name\"\n                        required\n                        placeholder={dialog.placeholder}\n                        defaultValue={dialog.service}\n                        onChange={this.handleInputChange}\n                        />\n                    <TextInputField\n                        name=\"secretKey\"\n                        label=\"Secret key\"\n                        required\n                        placeholder=\"Enter secret key\"\n                        defaultValue={dialog.secretKey}\n                        onChange={this.handleInputChange}\n                        />\n                </Dialog>\n                <SideSheet\n                    isShown={detail.isShown}\n                    onCloseComplete={() => this.setState({ detail: { ...detail, isShown: false }})}\n                    containerProps={{\n                        display: 'flex',\n                        flex: '1',\n                        flexDirection: 'column',\n                    }}\n                    width={400}\n                    >\n                    <Pane zIndex={1} flexShrink={0} elevation={0} backgroundColor=\"white\" padding={15}>\n                        <Heading size={600}>Card details</Heading>\n                    </Pane>\n                    <Pane display=\"flex\" flex=\"1\" flexDirection=\"column\" overflowY=\"scroll\" background=\"tint1\" padding={15}>\n                        <DetailsGrid>\n                            <Paragraph>id:</Paragraph><Strong>{detail.card.id}</Strong>\n                            <Paragraph>created at:</Paragraph><Strong><Moment unix format=\"LLL\">{detail.card.createdAt / 1000}</Moment></Strong>\n                            <Paragraph>user:</Paragraph><Strong>{detail.card.user}</Strong>\n                            <Paragraph>service:</Paragraph><Strong>{detail.card.service}</Strong>\n                            <Paragraph>secret key:</Paragraph><Strong>{detail.card.secretKey}</Strong>\n                        </DetailsGrid>\n                        <Pane display=\"flex\" flexGrow={1} alignItems=\"center\" justifyContent=\"center\">\n                            <QRCode value={detail.otpauth} level=\"H\" size={256} />\n                        </Pane>\n                    </Pane>\n                </SideSheet>\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n}","import styled from 'styled-components';\n\nexport const ContentWrapper = styled.div`\n    flex-grow: 1;\n    padding: 0;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n`;","// eslint-disable-next-line\nimport React from 'react';\nimport styled from 'styled-components';\nimport { mediaBreakpointUpLg } from 'styled-bootstrap-responsive-breakpoints';\n\nexport const Header = styled.div`\n    display: flex;\n    //position: relative;\n    //z-index: 100;\n    background-color: #fff;\n    padding: 15px;\n\n    ${mediaBreakpointUpLg`border-bottom: 1px solid transparent;`}\n`;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {\n    Avatar,\n    Heading,\n    Link,\n    LogOutIcon,\n    Menu,\n    Pane,\n    Popover,\n    Position,\n    SearchInput,\n    Spinner,\n    Text\n} from 'evergreen-ui';\nimport CardList from './CardList';\nimport { ContentWrapper } from '../styled/ContentWrapper';\nimport { Header } from '../styled/Header';\nimport { getPerson, getUserData, userSession } from '../auth';\n\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\nconst Footer = styled.footer`\n  display: flex;\n  height: 40px;\n  border-top: 1px solid #ced4da;\n  padding: 0 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            person: {\n                name() {\n                    return 'Anonymous';\n                },\n                avatarUrl() {\n                    return avatarFallbackImage;\n                },\n            },\n            username: \"\",\n            filter: ''\n        };\n        this.year = (new Date()).getFullYear();\n    }\n\n    render() {\n        const { handleSignOut } = this.props;\n        const { person, username, filter } = this.state;\n\n        return (\n            !userSession.isSignInPending() ?\n                <ContentWrapper>\n                    <Header>\n                        <SearchInput\n                            placeholder=\"Filter cards...\"\n                            width=\"100%\"\n                            height={40}\n                            marginRight={15}\n                            onChange={e => this.setState({ filter: e.target.value })}\n                            value={this.state.filter}\n                        />\n                        <Popover\n                            content={() => (\n                                <Pane position={Position.BOTTOM_RIGHT} minWidth={240}>\n                                    <Pane\n                                        display=\"flex\"\n                                        alignItems=\"center\"\n                                        justifyContent=\"center\"\n                                        flexDirection=\"column\"\n                                        border=\"none\"\n                                        marginTop={15}\n                                        marginBottom={15}\n                                    >\n                                        <Avatar\n                                            src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage }\n                                            name={ person.name() ? person.name() : 'Nameless Person' }\n                                            size={80}\n                                        />\n                                        <Heading is=\"h3\" marginTop={15}>{ person.name() ? person.name() : 'Nameless Person' }</Heading>\n                                        <Text size={300}>{ username }</Text>\n                                    </Pane>\n                                    <Menu>\n                                        <Menu.Divider />\n                                        <Menu.Group>\n                                            <Menu.Item icon={LogOutIcon} onSelect={ handleSignOut.bind(this) }>Sign out</Menu.Item>\n                                        </Menu.Group>\n                                    </Menu>\n                                </Pane>\n                            )}\n                        >\n                            <Avatar\n                                src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage }\n                                name={ person.name() ? person.name() : 'Nameless Person' }\n                                size={40}\n                            />\n                        </Popover>\n                    </Header>\n                    <Pane flexGrow={1} padding={15} display=\"flex\">\n                        <CardList filter={filter} />\n                    </Pane>\n                    <Footer>\n                        <Text size={300}>&copy; {this.year} Khalik Faradzhli</Text>\n                        <Text size={300}>Designed by: <Link size={300} href=\"https://evergreen.segment.com/\">Evergreen React UI Framework</Link></Text>\n                    </Footer>\n                </ContentWrapper> : <Spinner />\n        );\n    }\n\n    componentWillMount() {\n        this.setState({\n            person: getPerson(),\n            username: getUserData().username\n        });\n    }\n}","import React from 'react';\nimport logo from '../logo.svg';\n\nexport const Logo = ({ className, alt }) => (\n    <img src={ logo } className={ className } alt={ alt } />\n);","import React  from 'react';\nimport styled from 'styled-components';\nimport { Text, Pane, Heading, Button } from 'evergreen-ui';\nimport { authenticate } from '../auth';\nimport { Logo } from '../styled/Logo';\n\nconst SignInCardLogo = styled(Logo)`\n    height: 10vmin;\n    margin-bottom: 1.25rem;\n`;\n\nexport default function SignIn() {\n    return (\n        <Pane clearfix>\n            <Pane\n                elevation={1}\n                float=\"left\"\n                width={360}\n                margin={24}\n                padding={24}\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                backgroundColor=\"white\"\n            >\n                <SignInCardLogo alt=\"Stacks Authenticator\" />\n                <Heading is=\"h1\" size={800}>Stacks Authenticator</Heading>\n                <Text marginTop={16}>Please sign in to continue</Text>\n                <Button appearance=\"primary\" height={40} marginTop={16} iconBefore=\"log-in\" onClick={ () => authenticate() }>\n                    Sigh In with Hiro wallet\n                </Button>\n            </Pane>\n        </Pane>\n    )\n}\n","import React, { Component } from 'react';\nimport Profile from './Profile';\nimport SignIn from './SignIn';\nimport { getUserData, userSession } from '../auth';\n\n\nexport default class App extends Component {\n  state = {\n    userData: null,\n  };\n\n  handleSignOut(e) {\n    e.preventDefault();\n    this.setState({ userData: null });\n    userSession.signUserOut(window.location.origin);\n  }\n\n  render() {\n    return (\n      userSession.isUserSignedIn()\n          ? <Profile handleSignOut={ this.handleSignOut } />\n          : <SignIn />\n    );\n  }\n\n  componentWillMount() {\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then(userData => {\n        window.history.replaceState({}, document.title, '/');\n        this.setState({ userData: userData });\n      });\n    } else if (userSession.isUserSignedIn()) {\n      this.setState({ userData: getUserData() });\n    }\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
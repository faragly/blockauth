{"version":3,"sources":["images/fingerprint-with-key.svg","theme.js","components/Card.jsx","components/CardList.jsx","styled/Iconbar.jsx","styled/ContentWrapper.jsx","styled/Header.jsx","styled/Logo.jsx","components/Profile.jsx","components/Signin.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","theme","colors","primary","grays","fontFamilyBase","fontSizeBase","fontSizes","CodeContainer","styled","div","_templateObject","LabelContainer","_templateObject2","Progress","_templateObject3","ProgressBar","_templateObject4","CardList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","token","timeRemaining","copy","toaster","success","secretKey","data","authenticator","generate","setState","timer","setTimeout","updateToken","bind","_this2","_this$props$data","id","user","service","_this$state","react_default","a","createElement","Pane","elevation","hoverElevation","backgroundColor","padding","Heading","Popover","position","Position","BOTTOM_LEFT","content","_ref","close","Menu","Group","Item","icon","onSelect","onDetail","onEdit","Divider","intent","onRemove","IconButton","height","appearance","is","size","Tooltip","RIGHT","marginLeft","onClick","copyToClipboard","Paragraph","color","marginBottom","Strong","style","width","Math","round","clearTimeout","Component","Wrapper","CardList_templateObject","Container","CardList_templateObject2","SpinnerWrapper","CardList_templateObject3","GridContainer","CardList_templateObject4","mediaBreakpointOnlySm","_templateObject5","mediaBreakpointOnlyMd","_templateObject6","mediaBreakpointOnlyLg","_templateObject7","mediaBreakpointOnlyXl","_templateObject8","DetailsGrid","_templateObject9","AddCard","_templateObject10","SortableItem","SortableElement","Card_CardList","SortableList","SortableContainer","items","onAdd","map","value","index","key","concat","Button","marginRight","iconBefore","cards","cardIndex","isLoading","dialog","services","placeholder","isShown","edit","detail","card","handleInputChange","assertThisInitialized","handleDialogOpenComplete","handleDialogCloseComplete","handleCardDetail","handleCardEdit","handleCardRemove","handleSortEnd","saveCard","event","target","objectSpread","defineProperty","name","find","otpauth","keyuri","userSession","findIndex","splice","putFile","JSON","stringify","getFile","then","file","parse","reduce","res","item","finally","_this3","trim","createdAt","Date","now","push","floor","random","length","oldIndex","_ref2","newIndex","arrayMove","_this4","filter","filteredCards","toLowerCase","includes","Spinner","onSortEnd","axis","pressDelay","Dialog","title","onOpenComplete","onCloseComplete","isConfirmLoading","onConfirm","confirmLabel","isConfirmDisabled","TextInputField","label","required","defaultValue","onChange","SideSheet","containerProps","display","flex","flexDirection","zIndex","flexShrink","overflowY","background","react_moment_dist_default","unix","format","flexGrow","alignItems","justifyContent","qrcode_react_lib_default","level","fetchData","Iconbar","Iconbar_templateObject","mediaBreakpointUpLg","Iconbar_templateObject2","ContentWrapper","ContentWrapper_templateObject","rgba","ContentWrapper_templateObject2","Header","Header_templateObject","Header_templateObject2","Logo","className","alt","src","fingerprint","avatarFallbackImage","IconbarLogo","Profile_templateObject","IconbarNav","nav","Profile_templateObject2","IconbarLink","Profile_templateObject3","Footer","footer","Profile_templateObject4","Profile_templateObject5","Profile","person","avatarUrl","username","_this$props","handleSignOut","isSignInPending","react_router_dom","to","as","NavLink","exact","Icon","SearchInput","e","BOTTOM_RIGHT","minWidth","border","marginTop","Avatar","Text","react_router","path","render","CardList_CardList","assign","Link","href","Person","loadUserData","profile","SigninCard","Signin_templateObject","mediaBreakpointUpSm","Signin_templateObject2","SigninCardLogo","Signin_templateObject3","Signin","handleSignIn","appConfig","AppConfig","UserSession","App","preventDefault","redirectToSignIn","signUserOut","window","location","origin","styled_components_browser_esm","isUserSignedIn","Profile_Profile","Signin_Signin","handlePendingSignIn","userData","Boolean","hostname","match","GlobalStyle","createGlobalStyle","src_templateObject","reboot","bodyBg","ReactDOM","Fragment","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e6245b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fingerprint-with-key.91624b22.svg\";","export default {\n    colors: {\n        primary: '#0788DE',\n        grays: ['#f8f9fa', '#e9ecef', '#dee2e6', '#ced4da', '#969dab', '#70737c', '#494c57', '#343640', '#212229']\n    },\n    fontFamilyBase: 'Roboto, \"Helvetica Neue\", Helvetica, sans-serif',\n    fontSizeBase: '0.8125rem',\n    fontSizes: [\n        '0,7109375rem', '0.8125rem', '1.015625rem', '1,21875rem', '1.421875rem', '1.625rem', '2.03125rem'\n    ]\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Pane, Paragraph, IconButton, Menu, Strong, Tooltip, Popover, Position, toaster } from 'evergreen-ui';\nimport copy from 'clipboard-copy';\nimport { authenticator } from 'otplib/otplib-browser';\nimport theme from '../theme.js';\n\nconst CodeContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 5px;\n`;\n\nconst LabelContainer = styled(CodeContainer)`\n    justify-content: space-between;\n    margin-bottom: 10px;\n`;\n\nconst Progress = styled.div`\n    display: flex;\n    height: 3px;\n    overflow: hidden;\n    font-size: 0.60938rem;\n    background-color: ${theme.colors.grays[2]};\n`;\n\nconst ProgressBar = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    color: #fff;\n    text-align: center;\n    white-space: nowrap;\n    background-color: ${theme.colors.primary};\n    transition: width 0.6s ease;\n`;\n\nexport default class CardList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: null,\n            timeRemaining: null\n        };\n    }\n\n    copyToClipboard() {\n        copy(this.state.token);\n        toaster.success('Token copied to clipboard');\n    }\n\n    updateToken() {\n        const { secretKey } = this.props.data;\n        const token = authenticator.generate(secretKey);\n        const timeRemaining = authenticator.timeRemaining();\n\n        this.setState({\n            token,\n            timeRemaining\n        });\n        this.timer = setTimeout(this.updateToken.bind(this), 1000);\n    }\n\n    render() {\n        const { id, user, service } = this.props.data;\n        const { token, timeRemaining } = this.state;\n\n        return (\n            <Pane elevation={1} hoverElevation={2} backgroundColor=\"white\" padding={20}>\n                <LabelContainer>\n                    <Heading>{service} ({user})</Heading>\n                    <Popover\n                        position={Position.BOTTOM_LEFT}\n                        content={({ close }) =>\n                            <Menu>\n                                <Menu.Group>\n                                    <Menu.Item icon=\"list-detail-view\" onSelect={() => {\n                                        this.props.onDetail(id);\n                                        close();\n                                    }}>View</Menu.Item>\n                                    <Menu.Item icon=\"edit\" onSelect={() => {\n                                        this.props.onEdit(id);\n                                        close();\n                                    }}>Edit</Menu.Item>\n                                </Menu.Group>\n                                <Menu.Divider />\n                                <Menu.Group>\n                                    <Menu.Item icon=\"trash\" intent=\"danger\" onSelect={() => {\n                                        this.props.onRemove(id);\n                                        close();\n                                    }}>Remove</Menu.Item>\n                                </Menu.Group>\n                            </Menu>\n                        }\n                        >\n                        <IconButton height={24} appearance=\"minimal\" icon=\"more\" />\n                    </Popover>\n                </LabelContainer>\n                <CodeContainer>\n                    <Heading is=\"h1\" size={900}>{token}</Heading>\n                    <Tooltip content=\"Copy to clipboard\" position={Position.RIGHT}>\n                        <IconButton marginLeft={10} appearance=\"minimal\" icon=\"clipboard\" onClick={ this.copyToClipboard.bind(this) } />\n                    </Tooltip>\n                </CodeContainer>\n                <Paragraph color=\"muted\" marginBottom={5}>\n                    Your token expires in <Strong>{ timeRemaining }s</Strong>\n                </Paragraph>\n                <Progress>\n                    <ProgressBar style={{ width: Math.round((timeRemaining / 30) * 100) + '%' }} />\n                </Progress>\n            </Pane>\n        );\n    }\n\n    componentDidMount() {\n        this.updateToken();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n}\n\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Button, Dialog, Heading, Pane, Paragraph, SideSheet, Spinner, Strong, TextInputField, toaster } from 'evergreen-ui';\nimport { mediaBreakpointOnlySm, mediaBreakpointOnlyMd, mediaBreakpointOnlyLg, mediaBreakpointOnlyXl } from 'styled-bootstrap-responsive-breakpoints';\nimport { SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { authenticator } from 'otplib/otplib-browser';\nimport QRCode from 'qrcode.react';\nimport Moment from 'react-moment';\nimport Card from './Card';\nimport theme from '../theme.js';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-grow: 1;\n`;\n\nconst Container = styled(Wrapper)`\n    flex-direction: column;\n`;\n\nconst SpinnerWrapper = styled(Wrapper)`\n    align-self: center;\n    justify-content: center;\n`;\n\nconst GridContainer = styled.div`\n    display: grid;\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n    margin-bottom: 15px;\n\n    ${mediaBreakpointOnlySm`\n        grid-template-columns: repeat(2, calc(50% - 7.5px));\n    `};\n\n    ${mediaBreakpointOnlyMd`\n        grid-template-columns: repeat(3, calc(33.33% - 10px));\n    `};\n\n    ${mediaBreakpointOnlyLg`\n        grid-template-columns: repeat(4, calc(25% - 11.25px));\n    `};\n\n    ${mediaBreakpointOnlyXl`\n        grid-template-columns: repeat(5, calc(20% - 12px));\n    `};\n`;\n\nconst DetailsGrid = styled.div`\n    display: grid;\n    grid-column-gap: 15px;\n    grid-row-gap: 5px;\n    grid-template-columns: 30% calc(70% - 15px);\n    background-color: #fff;\n    padding: 15px;\n    border-color: ${theme.colors.grays[1]};\n    border-width: 1px;\n    border-style: solid;\n`;\n\nconst AddCard = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 3px dashed ${theme.colors.grays[1]};\n    min-height: 142px;\n`;\n\nconst SortableItem = SortableElement((props) => <Card {...props} />);\n\nconst SortableList = SortableContainer(({items, onAdd, onDetail, onEdit, onRemove}) => {\n    return (\n        <GridContainer>\n        {items.map((value, index) => (\n            <SortableItem key={`item-${index}`} index={index} data={value} onDetail={onDetail} onEdit={onEdit} onRemove={onRemove} />\n        ))}\n            <AddCard>\n                <Button marginRight={12} iconBefore=\"plus\" onClick={onAdd}>Add secret</Button>\n            </AddCard>\n        </GridContainer>\n    );\n});\n\nexport default class CardList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cards: [],\n            cardIndex: 0,\n            isLoading: false,\n            dialog: {\n                services: ['Binance', 'Coinlist', 'Huobi', 'Bittrex', 'Kraken', 'Poloniex', 'Xapo', 'LocalBitcoins', 'Bitstamp', 'Bitfinex'],\n                placeholder: null,\n                isShown: false,\n                isLoading: false,\n                edit: null,\n                value: '',\n                service: '',\n                secretKey: ''\n            },\n            detail: {\n                isShown: false,\n                card: {}\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleDialogOpenComplete = this.handleDialogOpenComplete.bind(this);\n        this.handleDialogCloseComplete = this.handleDialogCloseComplete.bind(this);\n        this.handleCardDetail = this.handleCardDetail.bind(this);\n        this.handleCardEdit = this.handleCardEdit.bind(this);\n        this.handleCardRemove = this.handleCardRemove.bind(this);\n        this.handleSortEnd = this.handleSortEnd.bind(this);\n        this.saveCard = this.saveCard.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        this.setState({\n            dialog: {\n                ...this.state.dialog,\n                [target.name]: target.value\n            }\n        });\n    }\n\n    handleCardDetail(id) {\n        const card = this.state.cards.find(card => card.id === id);\n        this.setState({\n            detail: {\n                ...this.state.detail,\n                isShown: true,\n                card,\n                otpauth: authenticator.keyuri(card.user, card.service, card.secretKey)\n            }\n        });\n    }\n\n    handleCardEdit(id) {\n        const card = this.state.cards.find(card => card.id === id);\n        this.setState({\n            dialog: {\n                ...this.state.dialog,\n                isShown: true,\n                edit: id,\n                user: card.user,\n                service: card.service,\n                secretKey: card.secretKey\n            }\n        });\n    }\n\n    handleCardRemove(id) {\n        const { userSession } = this.props;\n        let { cards } = this.state;\n        const index = cards.findIndex(card => card.id === id);\n\n        if (index > -1) {\n            cards.splice(index, 1);\n            this.setState({ cards });\n            userSession.putFile('cards.json', JSON.stringify(cards));\n            toaster.success('Card deleted successfully');\n        }\n    }\n\n    fetchData() {\n        const { userSession } = this.props;\n        this.setState({ isLoading: true });\n        userSession.getFile('cards.json')\n            .then((file) => {\n                const cards = JSON.parse(file || '[]');\n                const cardIndex = cards.reduce((res, item) => res > item.id ? res : item.id, 0);\n                this.setState({\n                    cardIndex,\n                    cards,\n                })\n            })\n            .finally(() => {\n                this.setState({ isLoading: false })\n            });\n    }\n\n    saveCard() {\n        const { userSession } = this.props;\n        const { dialog } = this.state;\n        let cards = this.state.cards;\n        this.setState({ dialog: { ...dialog, isLoading: true }});\n\n        let card = {\n            id: dialog.edit || (this.state.cardIndex + 1),\n            user: dialog.user.trim(),\n            service: dialog.service.trim(),\n            secretKey: dialog.secretKey.trim(),\n            createdAt: Date.now()\n        };\n\n        if (dialog.edit) {\n            const index = cards.findIndex(card => card.id === dialog.edit);\n\n            if (index > -1) {\n                cards[index] = card;\n            }\n        } else {\n            cards.push(card);\n        }\n\n        userSession.putFile('cards.json', JSON.stringify(cards))\n            .then(() => {\n                this.setState({\n                    cardIndex: card.id,\n                    cards,\n                    dialog: {\n                        ...dialog,\n                        isShown: false,\n                        isLoading: false,\n                        edit: null,\n                        user: '',\n                        service: '',\n                        secretKey: ''\n                    }\n                });\n                toaster.success('Card successfully added');\n            });\n    }\n\n    handleDialogOpenComplete() {\n        const { services } = this.state.dialog;\n        const placeholder = services[Math.floor(Math.random() * services.length)];\n        this.setState({\n            dialog: {\n                ...this.state.dialog,\n                placeholder\n            }\n        });\n    }\n\n    handleDialogCloseComplete() {\n        let dialog = this.state.dialog;\n\n        if (dialog.edit) {\n            dialog = {\n                ...dialog,\n                edit: null,\n                user: '',\n                service: '',\n                secretKey: ''\n            }\n        }\n\n        this.setState({\n            dialog: {\n                ...dialog,\n                isShown: false,\n                isLoading: false\n            }\n        });\n    }\n\n    handleSortEnd({oldIndex, newIndex}) {\n        const { userSession } = this.props;\n        let cards = arrayMove(this.state.cards, oldIndex, newIndex);\n\n        this.setState({ cards });\n        userSession.putFile('cards.json', JSON.stringify(cards));\n    }\n\n    render() {\n        const { dialog, cards, detail } = this.state;\n        const { filter } = this.props;\n        const filteredCards = cards.filter(card => card.user.toLowerCase().includes(filter) || card.service.toLowerCase().includes(filter));\n\n        return (\n            this.state.isLoading ? <SpinnerWrapper><Spinner /></SpinnerWrapper>\n            : <Container>\n                <Heading is=\"h1\" size={700} marginBottom={20}>Authentification cards</Heading>\n                <SortableList\n                    items={filteredCards}\n                    onAdd={() => this.setState({ dialog: { ...dialog, isShown: true }})}\n                    onDetail={this.handleCardDetail}\n                    onEdit={this.handleCardEdit}\n                    onRemove={this.handleCardRemove}\n                    onSortEnd={this.handleSortEnd}\n                    axis=\"xy\"\n                    pressDelay={200}\n                    />\n                <Dialog\n                    width={400}\n                    isShown={dialog.isShown}\n                    title={`${dialog.edit ? 'Edit' : 'Add'} secret`}\n                    onOpenComplete={this.handleDialogOpenComplete}\n                    onCloseComplete={this.handleDialogCloseComplete}\n                    isConfirmLoading={dialog.isLoading}\n                    onConfirm={this.saveCard.bind(this)}\n                    confirmLabel={dialog.isLoading ? 'Loading...' : 'Save'}\n                    isConfirmDisabled={!dialog.user || !dialog.service || !dialog.secretKey}\n                >\n                    <TextInputField\n                        name=\"user\"\n                        label=\"User name\"\n                        required\n                        placeholder={`for example, Elon Must or user@domain.com`}\n                        defaultValue={dialog.user}\n                        onChange={this.handleInputChange}\n                        />\n                    <TextInputField\n                        name=\"service\"\n                        label=\"Service name\"\n                        required\n                        placeholder={dialog.placeholder}\n                        defaultValue={dialog.service}\n                        onChange={this.handleInputChange}\n                        />\n                    <TextInputField\n                        name=\"secretKey\"\n                        label=\"Secret key\"\n                        required\n                        placeholder=\"Enter secret key\"\n                        defaultValue={dialog.secretKey}\n                        onChange={this.handleInputChange}\n                        />\n                </Dialog>\n                <SideSheet\n                    isShown={detail.isShown}\n                    onCloseComplete={() => this.setState({ detail: { ...detail, isShown: false }})}\n                    containerProps={{\n                        display: 'flex',\n                        flex: '1',\n                        flexDirection: 'column',\n                    }}\n                    width={400}\n                    >\n                    <Pane zIndex={1} flexShrink={0} elevation={0} backgroundColor=\"white\" padding={15}>\n                        <Heading size={600}>Card details</Heading>\n                    </Pane>\n                    <Pane display=\"flex\" flex=\"1\" flexDirection=\"column\" overflowY=\"scroll\" background=\"tint1\" padding={15}>\n                        <DetailsGrid>\n                            <Paragraph>id:</Paragraph><Strong>{detail.card.id}</Strong>\n                            <Paragraph>created at:</Paragraph><Strong><Moment unix format=\"LLL\">{detail.card.createdAt / 1000}</Moment></Strong>\n                            <Paragraph>user:</Paragraph><Strong>{detail.card.user}</Strong>\n                            <Paragraph>service:</Paragraph><Strong>{detail.card.service}</Strong>\n                            <Paragraph>secret key:</Paragraph><Strong>{detail.card.secretKey}</Strong>\n                        </DetailsGrid>\n                        <Pane display=\"flex\" flexGrow={1} alignItems=\"center\" justifyContent=\"center\">\n                            <QRCode value={detail.otpauth} level=\"H\" size={256} />\n                        </Pane>\n                    </Pane>\n                </SideSheet>\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n}","// eslint-disable-next-line\nimport React from 'react';\nimport styled from 'styled-components';\nimport { mediaBreakpointUpLg } from 'styled-bootstrap-responsive-breakpoints';\nimport theme from '../theme';\n\nexport const Iconbar = styled.div`\n    width: 64px;\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    padding: 15px 0;\n    background-color: #fff;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    background-color: ${theme.colors.grays[1]};\n    z-index: 500;\n\n    ${mediaBreakpointUpLg`\n        display: flex;\n    `}\n`;","// eslint-disable-next-line\nimport React from 'react';\nimport styled from 'styled-components';\nimport { rgba } from 'polished';\nimport { mediaBreakpointUpLg } from 'styled-bootstrap-responsive-breakpoints';\nimport theme from '../theme.js';\n\nexport const ContentWrapper = styled.div`\n    flex-grow: 1;\n    border-left-color: $gray-400;\n    box-shadow: 0 0 7px ${rgba(theme.colors.grays[8], .08)};\n    padding: 0;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    background-color: ${theme.colors.grays[0]};\n\n    ${mediaBreakpointUpLg`\n        border-left: 1px solid ${theme.colors.grays[3]};\n        margin-left: 64px;\n    `}\n`;","// eslint-disable-next-line\nimport React from 'react';\nimport styled from 'styled-components';\nimport { rgba } from 'polished';\nimport { mediaBreakpointUpLg } from 'styled-bootstrap-responsive-breakpoints';\nimport theme from '../theme.js';\n\nexport const Header = styled.div`\n    display: flex;\n    //position: relative;\n    //z-index: 100;\n    background-color: #fff;\n    border-bottom: 1px solid ${theme.colors.grays[2]};\n    box-shadow: 0 0 10px ${rgba(theme.colors.grays[8], 0.06)};\n    padding: 15px;\n\n    ${mediaBreakpointUpLg`border-bottom: 1px solid transparent;`}\n`;","import React from 'react';\nimport fingerprint from '../images/fingerprint-with-key.svg';\n\nexport const Logo = ({ className, alt }) => (\n    <img src={ fingerprint } className={ className } alt={ alt } />\n);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { mediaBreakpointUpLg } from 'styled-bootstrap-responsive-breakpoints';\nimport { Avatar, Heading, Icon, Link, Menu, Pane, Popover, Position, SearchInput, Spinner, Text } from 'evergreen-ui';\nimport { Person } from 'blockstack';\nimport CardList from './CardList';\nimport { Iconbar } from '../styled/Iconbar';\nimport { ContentWrapper } from '../styled/ContentWrapper';\nimport { Header } from '../styled/Header';\nimport { Logo } from '../styled/Logo';\nimport theme from '../theme';\n\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\nconst IconbarLogo = styled(Logo)`\n    height: 40px;margin-bottom: 15px;\n`;\n\nconst IconbarNav = styled.nav`\n    flex-direction: column;\n    margin-top: 15px;\n`;\n\nconst IconbarLink = styled.a`\n    position: relative;\n    padding: 0;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &, &:hover { color: #494c57; }\n    &.active { color: ${theme.colors.primary}; }\n    & + & { margin-top: 10px; }\n`;\n\nconst Footer = styled.footer`\n    display: none;\n\n    ${mediaBreakpointUpLg`\n        display: flex;\n        height: 40px;\n        border-top: 1px solid #ced4da;\n        padding: 0 15px;\n        align-items: center;\n        justify-content: space-between;\n    `}\n`;\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            person: {\n                name() {\n                    return 'Anonymous';\n                },\n                avatarUrl() {\n                    return avatarFallbackImage;\n                },\n            },\n            username: \"\",\n            filter: ''\n        };\n    }\n\n    render() {\n        const { handleSignOut, userSession } = this.props;\n        const { person, username, filter } = this.state;\n\n        return (\n            !userSession.isSignInPending() ?\n            <BrowserRouter>\n                <Iconbar>\n                    <NavLink to=\"/\">\n                        <IconbarLogo alt=\"Blockstack Authenticator\" />\n                    </NavLink>\n                    <IconbarNav>\n                        <IconbarLink as={ NavLink } to=\"/\" exact>\n                            <Icon icon=\"refresh\" />\n                        </IconbarLink>\n                        {/* <IconbarLink as={ NavLink } to=\"/secrets/\">\n                            <Icon icon=\"list\" />\n                        </IconbarLink> */}\n                    </IconbarNav>\n                </Iconbar>\n                <ContentWrapper>\n                    <Header>\n                        <SearchInput\n                            placeholder=\"Filter cards...\"\n                            width=\"100%\"\n                            height={40}\n                            marginRight={15}\n                            onChange={e => this.setState({ filter: e.target.value })}\n                            value={this.state.filter}\n                        />\n                        <Popover\n                            content={() => (\n                                <Pane position={Position.BOTTOM_RIGHT} minWidth={240}>\n                                    <Pane\n                                        display=\"flex\"\n                                        alignItems=\"center\"\n                                        justifyContent=\"center\"\n                                        flexDirection=\"column\"\n                                        border=\"none\"\n                                        marginTop={15}\n                                        marginBottom={15}\n                                        >\n                                        <Avatar\n                                            src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage }\n                                            name={ person.name() ? person.name() : 'Nameless Person' }\n                                            size={80}\n                                        />\n                                        <Heading is=\"h3\" marginTop={15}>{ person.name() ? person.name() : 'Nameless Person' }</Heading>\n                                        <Text size={300}>{ username }</Text>\n                                    </Pane>\n                                    <Menu>\n                                        {/* <Menu.Group>\n                                            <Menu.Item icon=\"user\">Profile</Menu.Item>\n                                        </Menu.Group> */}\n                                        <Menu.Divider />\n                                        <Menu.Group>\n                                            <Menu.Item icon=\"log-out\" onSelect={ handleSignOut.bind(this) }>Sign out</Menu.Item>\n                                        </Menu.Group>\n                                    </Menu>\n                                </Pane>\n                            )}\n                            >\n                            <Avatar\n                                src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage }\n                                name={ person.name() ? person.name() : 'Nameless Person' }\n                                size={40}\n                                />\n                        </Popover>\n                    </Header>\n                    <Pane flexGrow={1} padding={15} display=\"flex\">\n                        <Route path=\"/\" exact render={ (props) => <CardList {...props} userSession={userSession} filter={filter} /> } />\n                        {/* <Route path=\"/secrets/\" render={ (props) => <SecretsTable {...props} userSession={userSession} /> } /> */}\n                    </Pane>\n                    <Footer>\n                        <Text size={300}>&copy; 2019 Khalik Faradzhli</Text>\n                        <Text size={300}>Designed by: <Link size={300} href=\"https://evergreen.segment.com/\">Evergreen React UI Framework</Link></Text>\n                    </Footer>\n                </ContentWrapper>\n            </BrowserRouter> : <Spinner />\n        );\n    }\n\n    componentWillMount() {\n        const { userSession } = this.props;\n        this.setState({\n            person: new Person(userSession.loadUserData().profile),\n            username: userSession.loadUserData().username\n        });\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { rgba } from 'polished';\nimport { mediaBreakpointUpSm } from \"styled-bootstrap-responsive-breakpoints\";\nimport { Heading, Text, Button } from 'evergreen-ui';\nimport { Logo } from '../styled/Logo';\nimport theme from '../theme.js';\n\nconst SigninCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 20px;\n    min-width: 300px;\n    box-shadow: 0 0 10px rgba(33,34,41,0.1);\n    background-color: ${rgba('#fff', .5)};\n    border-color: ${theme.colors.grays[2]};\n\n    ${mediaBreakpointUpSm`\n        border: 1px solid ${theme.colors.grays[3]};;\n        width: 360px;\n        padding: 30px 35px;\n    `}\n`;\n\nconst SigninCardLogo = styled(Logo)`\n    height: 50px;\n    margin-bottom: 30px;\n`;\n\nexport default class Signin extends Component {\n    render() {\n        const { handleSignIn } = this.props;\n\n        return (\n            <SigninCard>\n                <SigninCardLogo alt=\"Blockstack Authenticator\" />\n                <Heading is=\"h2\" size={600}>Blockstack Authenticator</Heading>\n                <Text marginTop=\"default\">Please sign in to continue</Text>\n                <Button appearance=\"primary\" height={40} marginTop=\"default\" iconBefore=\"log-in\" onClick={ handleSignIn.bind(this) }>\n                    Sigh In with Blockstack\n                </Button>\n            </SigninCard>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { UserSession, AppConfig } from 'blockstack';\nimport Profile from './Profile';\nimport Signin from './Signin';\nimport theme from './../theme';\n\nconst appConfig = new AppConfig();\nconst userSession = new UserSession({ appConfig: appConfig });\n\nexport default class App extends Component {\n    handleSignIn(e) {\n        e.preventDefault();\n        userSession.redirectToSignIn();\n    }\n\n    handleSignOut(e) {\n        e.preventDefault();\n        userSession.signUserOut(window.location.origin);\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n            {\n                !userSession.isUserSignedIn() ?\n                    <Signin userSession={userSession} handleSignIn={ this.handleSignIn } />\n                    : <Profile userSession={userSession} handleSignOut={ this.handleSignOut } />\n            }\n            </ThemeProvider>\n        );\n    }\n\n    componentWillMount() {\n        if (userSession.isSignInPending()) {\n            userSession.handlePendingSignIn().then((userData) => {\n                window.location = window.location.origin;\n            });\n        }\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport reboot from 'styled-reboot';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\n\nconst GlobalStyle = createGlobalStyle`\n    ${reboot({\n        fontFamilyBase: theme.fontFamilyBase,\n        fontSizeBase: theme.fontSizeBase,\n        bodyBg: theme.colors.grays[0]\n    })}\n\n    button:focus {\n        outline: none;\n    }\n\n    body {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        position: relative;\n    }\n\n    #root {\n        flex: 1 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n`;\n\nReactDOM.render((\n    <React.Fragment>\n        <GlobalStyle />\n        <App />\n    </React.Fragment>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}